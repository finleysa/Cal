#!/usr/bin/env ruby

$LOAD_PATH << "lib"
require 'zellers'
require 'month_convert'
require 'month'
require 'year'

## Print this month
if ARGV.length == 0
  month = Time.now.strftime("%m").to_i
  year = Time.now.strftime("%Y").to_i
  zeller = Zellers.new(month, year)

## Year method
elsif ARGV.length == 1
  year = ARGV[0].to_i
  jan_mar = []
  apr_jun = []
  jul_sep = []
  oct_dec = []
  for i in 0..2
    jan_mar[i] = print_month(find_month(i+1), year, Zellers.new(i+1, year))
    apr_jun[i] = print_month(find_month(i+4), year, Zellers.new(i+4, year))
    jul_sep[i] = print_month(find_month(i+7), year, Zellers.new(i+7, year))
    oct_dec[i] = print_month(find_month(i+10), year, Zellers.new(i+10, year))
  end
  print_year(year, jan_mar, apr_jun, jul_sep, oct_dec)

## Full month string method
elsif ARGV[0].to_i == 0
  month = month_string(ARGV[0])
  year = ARGV[1].to_i
  zeller = Zellers.new(month, year)

## Month and year method
elsif ARGV.length == 2
  month = ARGV[0].to_i
  year = ARGV[1].to_i
  zeller = Zellers.new(month, year)
else
  raise ArgumentError, 'too many arguments :( sadface'
end

## Print month if month is provided
if month
  month = find_month(month)
  mod_month = print_month(month, year, zeller)
  date_string = "#{month} #{year}"
  mod_month[0] = date_string.center(20).rstrip!
  mod_month[6].rstrip!
  mod_month[7].rstrip!
  mod_month[8].rstrip! if mod_month[7] == "                    "
  puts mod_month
end
